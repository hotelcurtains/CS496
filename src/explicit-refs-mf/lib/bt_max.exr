
(* Max exercise *)

let n_left = { data <= 12; left <= 0; right <= 0}    (* 0 in head signals null *)
in let n_right = { data <= 44; left <= 0; right <= 0}
in let n_root = { data <= 33; left <= n_left ; right <= n_right }
in let t1 = { root <= n_root ; length <= 3} 
(* since we're guaranteed BSTs, need only move as far right as possible. *)
in letrec helper(n) = 
  if number?(n) then 0
  else if (number?(n.right)) then n.data
  else (helper n.right)
in let max_bt = proc (t) {(helper t.root)}
in (max_bt t1)
